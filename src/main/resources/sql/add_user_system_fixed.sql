-- =====================================================
-- 사용자 시스템 추가를 위한 데이터베이스 스키마 업데이트 (수정버전)
-- =====================================================

-- 1. 기존 USERS 테이블이 있는지 확인하고 있다면 다른 이름 사용
DROP TABLE MBTI_USERS CASCADE CONSTRAINTS;
DROP SEQUENCE SEQ_MBTI_USER;

-- 1. 사용자 시퀀스 생성
CREATE SEQUENCE SEQ_MBTI_USER
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE
    CACHE 20;

-- 2. 사용자 테이블 생성 (MBTI_USERS로 명명)
CREATE TABLE MBTI_USERS (
    USER_ID NUMBER(20) PRIMARY KEY,
    USERNAME VARCHAR2(50) NOT NULL UNIQUE,
    EMAIL VARCHAR2(100) NOT NULL UNIQUE,
    PASSWORD_HASH VARCHAR2(255) NOT NULL,
    NICKNAME VARCHAR2(50),
    PROFILE_IMAGE VARCHAR2(500),
    MBTI_TYPE VARCHAR2(4),
    IS_ACTIVE CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y', 'N')),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    LAST_LOGIN TIMESTAMP
);

-- 3. 기존 테이블에 USER_ID 컬럼 추가

-- COMMENTS 테이블에 USER_ID 추가 (이미 있다면 스킵)
DECLARE
    column_exists EXCEPTION;
    PRAGMA EXCEPTION_INIT(column_exists, -1430);
BEGIN
    EXECUTE IMMEDIATE 'ALTER TABLE COMMENTS ADD USER_ID NUMBER(20)';
EXCEPTION
    WHEN column_exists THEN
        NULL; -- 컬럼이 이미 존재하면 무시
    WHEN OTHERS THEN
        NULL; -- 다른 오류도 무시 (안전하게 진행)
END;
/

-- TEST_RESULTS 테이블에 USER_ID 추가 (이미 있다면 스킵)
DECLARE
    column_exists EXCEPTION;
    PRAGMA EXCEPTION_INIT(column_exists, -1430);
BEGIN
    EXECUTE IMMEDIATE 'ALTER TABLE TEST_RESULTS ADD USER_ID NUMBER(20)';
EXCEPTION
    WHEN column_exists THEN
        NULL; -- 컬럼이 이미 존재하면 무시
    WHEN OTHERS THEN
        NULL; -- 다른 오류도 무시 (안전하게 진행)
END;
/

-- COMMENTS 테이블의 RESULT_ID를 NULL 허용으로 변경 (커뮤니티 댓글용)
BEGIN
    EXECUTE IMMEDIATE 'ALTER TABLE COMMENTS MODIFY RESULT_ID NUMBER(10) NULL';
EXCEPTION
    WHEN OTHERS THEN
        NULL; -- 이미 nullable이거나 다른 이유로 실패해도 무시
END;
/

-- 4. 인덱스 생성
CREATE INDEX IDX_MBTI_USERS_USERNAME ON MBTI_USERS(USERNAME);
CREATE INDEX IDX_MBTI_USERS_EMAIL ON MBTI_USERS(EMAIL);
CREATE INDEX IDX_MBTI_USERS_MBTI_TYPE ON MBTI_USERS(MBTI_TYPE);
CREATE INDEX IDX_MBTI_USERS_CREATED_AT ON MBTI_USERS(CREATED_AT);
CREATE INDEX IDX_MBTI_USERS_LAST_LOGIN ON MBTI_USERS(LAST_LOGIN);

-- 기존 인덱스가 없는 경우에만 생성
DECLARE
    index_exists EXCEPTION;
    PRAGMA EXCEPTION_INIT(index_exists, -955);
BEGIN
    EXECUTE IMMEDIATE 'CREATE INDEX IDX_COMMENTS_USER_ID ON COMMENTS(USER_ID)';
EXCEPTION
    WHEN index_exists THEN
        NULL; -- 인덱스가 이미 존재하면 무시
    WHEN OTHERS THEN
        RAISE;
END;
/

DECLARE
    index_exists EXCEPTION;
    PRAGMA EXCEPTION_INIT(index_exists, -955);
BEGIN
    EXECUTE IMMEDIATE 'CREATE INDEX IDX_TEST_RESULTS_USER_ID ON TEST_RESULTS(USER_ID)';
EXCEPTION
    WHEN index_exists THEN
        NULL; -- 인덱스가 이미 존재하면 무시
    WHEN OTHERS THEN
        RAISE;
END;
/

-- 5. 외래키 제약조건 추가 (선택사항 - 성능상 필요시)
-- ALTER TABLE COMMENTS ADD CONSTRAINT FK_COMMENTS_MBTI_USER 
--     FOREIGN KEY (USER_ID) REFERENCES MBTI_USERS(USER_ID) ON DELETE SET NULL;

-- ALTER TABLE TEST_RESULTS ADD CONSTRAINT FK_TEST_RESULTS_MBTI_USER 
--     FOREIGN KEY (USER_ID) REFERENCES MBTI_USERS(USER_ID) ON DELETE SET NULL;

-- 6. 사용자 테이블 업데이트 트리거
CREATE OR REPLACE TRIGGER TRG_MBTI_USERS_UPDATE
    BEFORE UPDATE ON MBTI_USERS
    FOR EACH ROW
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
END;
/

-- 7. 샘플 관리자 사용자 생성 (비밀번호: admin123)
-- BCrypt 해시는 실제 애플리케이션에서 생성할 예정
INSERT INTO MBTI_USERS (
    USER_ID, USERNAME, EMAIL, PASSWORD_HASH, NICKNAME, 
    MBTI_TYPE, IS_ACTIVE
) VALUES (
    SEQ_MBTI_USER.NEXTVAL, 
    'admin', 
    'admin@mbtitest.com', 
    '$2a$10$examplehashfromspring', 
    '관리자',
    'INTJ',
    'Y'
);

-- 변경사항 커밋
COMMIT;

-- 테이블 구조 확인
SELECT TABLE_NAME, COLUMN_NAME, DATA_TYPE, NULLABLE, DATA_DEFAULT
FROM USER_TAB_COLUMNS 
WHERE TABLE_NAME IN ('MBTI_USERS', 'COMMENTS', 'TEST_RESULTS')
ORDER BY TABLE_NAME, COLUMN_ID;

-- 생성된 시퀀스 확인
SELECT SEQUENCE_NAME, LAST_NUMBER 
FROM USER_SEQUENCES 
WHERE SEQUENCE_NAME = 'SEQ_MBTI_USER';

SELECT '🎉 사용자 시스템 데이터베이스 스키마 업데이트 완료!' AS MESSAGE FROM DUAL;
